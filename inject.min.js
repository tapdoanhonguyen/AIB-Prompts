import{AIBestPromptsClient as t,Reaction as e}from"./client.min.js";import{i18ngetMessage as s}from"./translator.min.js";import{ActivityFeedURL as r,AppAccountURL as o,AppCommunityForumURL as i,AppName as a,AppURL as p,ContinueActionsFeedURL as m,EndpointConversation as l,ExportFilePrefix as n,ExportHeaderPrefix as P,LanguageFeedURL as d,PromptPlaceholder as c,TargetLanguagePlaceholder as h,VariablePlaceholder as I,VariableDefinition as A,ToneFeedURL as u,TopicFeedURL as g,WritingStyleFeedURL as B}from"./config.min.js";import{ListTypeNo as y,MessageVoteTypeNo as b,NotificationSeverity as f,PromptTemplatesType as v,PromptTypeNo as $,SortModeNo as w,SubPromptTypeNo as T,UsageTypeNo as S,UserLevelNo as x}from"./enums.min.js";import{createReportPromptModal as C}from"./feedback.min.js";import{List as k,Lists as L}from"./list.min.js";import{showMessage as D}from"./messages.min.js";import{ReactionNo as E}from"./rxn.min.js";import{capitalizeWords as U,css as N,formatDateTime as R,formatAgo as _,formatHumanReadableNumber as M,hideModal as F,sanitizeInput as V,svg as O}from"./utils.min.js";let DefaultPromptActivity="all",DefaultPromptTopic="all",DefaultTargetLanguage="English*",lastPromptTopicKey="lastPromptTopic",lastTargetLanguageKey="lastTargetLanguage",lastPageSizeKey="lastPageSize",queryParamPromptID="AIBestPrompts_PromptID",queryParamVariable="AIBestPrompts_VARIABLE",pageSizeOptions=[4,8,12,16,20],pageSizeDefault=20,editPromptTemplateEvent="editPromptTemplate",variableWrapperID="AIBestPrompts__variable-wrapper",variableIDPrefix="AIBestPrompts__VARIABLE",parentAIBestPrompts=document.querySelector("#__next");window.AIBestPrompts={fetch:window._fetch=window._fetch||window.fetch,CacheBuster:btoa(new Date().toISOString().slice(0,16).toString()),Client:t,TargetLanguage:null===localStorage.getItem(lastTargetLanguageKey)?DefaultTargetLanguage:localStorage.getItem(lastTargetLanguageKey),Tone:null,WritingStyle:null,PromptTopic:localStorage.getItem(lastPromptTopicKey)||"all",PromptActivity:"all",PromptSortMode:w.TOP_VOTES,PromptSearch:"",PromptTemplatesType:v.PUBLIC,PromptTemplatesList:null,PromptTemplates:[],OwnPrompts:[],Languages:[],Tones:[],WritingStyles:[],ContinueActions:[],Lists:new L,Topics:[],Activities:[],AdminMode:!1,PromptTemplateSection:{currentPage:0,pageSize:+localStorage.getItem(lastPageSizeKey)||20},SelectedPromptTemplate:null,async init(){this.boundHandleArrowKey=this.handleArrowKey.bind(this),await this.Client.init(),this.replaceFetch(),this.createObserver(),this.Client.UserQuota.connectAccountAnnouncement()||this.fetchMessages(),await Promise.all([this.fetchLists(),this.fetchTopics(),this.fetchActivities(),]),this.fetchPromptTemplates(),await Promise.all([this.fetchLanguages(),this.fetchTones(),this.fetchWritingStyles(),this.fetchContinueActions(),]),this.insertLanguageToneWritingStyleContinueActions(),this.insertVariablesInputWrapper(),this.setupSidebar(),this.fetchPromptFromDeepLink(),this.insertPromptTemplatesSection(),window.addEventListener("popstate",()=>{this.fetchPromptFromDeepLink()}),document.addEventListener("AIBestPrompts.tokens",async t=>{this.handleTokensEvent(t)})},async handleTokensEvent(t){this.Client.storeTokens(t.detail.tokens);try{await this.Client.linkUser()}catch(e){this.showNotification(f.ERROR,"Could not connect your OpenAI account to AIBestPrompts, please try again later.",!1);return}try{for(await this.Client.checkUserStatus(),this.Client.User.IsLinked||this.showNotification(f.INFO,"Connecting your OpenAI account to AIBestPrompts, please wait...",!1);!this.Client.User.IsLinked;)await new Promise(t=>setTimeout(t,5e3)),await this.Client.checkUserStatus()}catch(s){this.showNotification(f.ERROR,"Could not get your AIBestPrompts user profile, please try again later.",!1);return}this.Client.AppUser&&this.showNotification(f.SUCCESS,`You are now logged in using AIBestPrompts account "${V(this.Client.AppUser.Name)} (${V(this.Client.AppUser.Email)})"`,!1),await this.insertPromptTemplatesSection()},async fetchPromptFromDeepLink(){let t=new URLSearchParams(window.location.search),e=parseInt(localStorage.getItem("AIBestPrompts_PromptID"));if(!e){await this.selectPromptTemplateByIndex(null);return}if(this.SelectedPromptTemplate&&this.SelectedPromptTemplate.ID===e)return;let r;try{r=await this.Client.getPrompt(e)}catch(o){this.showNotification(f.ERROR,s("Somethingwhenrong"));return}r&&(this.selectPromptTemplate(r),r.PromptVariables&&r.PromptVariables.forEach(e=>{let s=t.get(queryParamVariable+e.ID);if(s){let r=document.querySelector("#"+variableIDPrefix+e.ID);r&&(r.value=s)}}))},async fetchMessages(){D(await this.Client.getMessages("all"===this.PromptTopic?"":this.PromptTopic),this.confirmMessage.bind(this),this.voteForMessage.bind(this))},async confirmMessage(t){try{await this.Client.confirmMessage(t)}catch(e){return this.showNotification(f.ERROR,s("Somethingwhenrong")),!1}return this.showNotification(f.SUCCESS,"Thanks for the confirmation!"),!0},async voteForMessage(t,e){try{await this.Client.voteForMessage(t,e)}catch(r){return this.showNotification(f.ERROR,s("Somethingwhenrong")),!1}return!0},setupSidebar(){this.addExportButton();let t=this.getNewChatButtons();t.forEach(t=>{t.onclick=async()=>{await this.selectPromptTemplateByIndex(null),this.hideContinueActionsButton()}})},async fetchLists(){try{let t=await this.Client.getAllListsWithDetails();this.Lists=new L(t.map(t=>new k(this.Client,t)))}catch(s){this.showNotification(f.ERROR,`Could not load the prompts lists. ${s instanceof e?s.message:""}`);return}},async fetchTopics(){return this.fetch(g+this.CacheBuster).then(t=>t.text()).then(t=>this.CSVToArray(t)).then(t=>t.map(([t,e])=>({ID:t,Label:e})).filter(({ID:t})=>t&&"ID"!==t)).then(t=>{this.Topics=t.sort((t,e)=>t.Label.localeCompare(e.Label))})},async fetchActivities(){return this.fetch(r+this.CacheBuster).then(t=>t.text()).then(t=>this.CSVToArray(t)).then(t=>t.map(([t,e,s])=>({TopicID:t,ID:e,Label:s})).filter(({ID:t})=>t&&"ID"!==t)).then(t=>{this.Activities=t.sort((t,e)=>t.Label.localeCompare(e.Label)),this.Activities=t.sort((t,e)=>t.Label.localeCompare(e.Label))})},fetchLanguages(){return this.fetch(d+this.CacheBuster).then(t=>t.text()).then(t=>this.CSVToArray(t)).then(t=>t.map(([t,e,s])=>({langcode:t,languageEnglish:e,languageLabel:s})).filter(({langcode:t})=>t&&"langcode"!==t)).then(t=>{this.Languages=t})},fetchTones(){let t=this.Client.AccountSubPrompts.filter(t=>t.TypeNo===T.CustomTones).map(t=>({ID:parseInt(t.PromptID),Label:t.Label}));return t.length>0&&(this.Tones=t),this.fetch(u+this.CacheBuster).then(t=>t.text()).then(t=>this.CSVToArray(t)).then(t=>t.map(([t,e])=>({ID:parseInt(t),Label:e})).filter(({ID:t})=>t&&"ID"!==t)).then(t=>{this.Tones=[...this.Tones,...t].sort((t,e)=>t.Label.localeCompare(e.Label))})},fetchWritingStyles(){let t=this.Client.AccountSubPrompts.filter(t=>t.TypeNo===T.CustomStyles).map(t=>({ID:parseInt(t.PromptID),Label:t.Label}));return t.length>0&&(this.WritingStyles=t),this.fetch(B+this.CacheBuster).then(t=>t.text()).then(t=>this.CSVToArray(t)).then(t=>t.map(([t,e])=>({ID:parseInt(t),Label:e})).filter(({ID:t})=>t&&"ID"!==t)).then(t=>{this.WritingStyles=[...this.WritingStyles,...t].sort((t,e)=>t.Label.localeCompare(e.Label))})},fetchContinueActions(){let t=this.Client.AccountSubPrompts.filter(t=>t.TypeNo===T.CustomContinue).map(t=>({ID:parseInt(t.PromptID),Label:t.Label,Prompt:t.Prompt}));return t.length>0&&(this.ContinueActions=t),this.fetch(m+this.CacheBuster).then(t=>t.text()).then(t=>this.CSVToArray(t)).then(t=>t.map(([t,e,s])=>({ID:parseInt(t),Label:e,Prompt:s})).filter(({ID:t})=>t&&"ID"!==t)).then(t=>{this.ContinueActions=[...this.ContinueActions,...t,].sort((t,e)=>t.Label.localeCompare(e.Label))})},async fetchPromptTemplates(){let t=await this.Client.getPrompts("all"===this.PromptTopic?"":this.PromptTopic,this.PromptSortMode);[this.PromptTemplates,this.OwnPrompts]=t.reduce((t,e)=>(e.PromptTypeNo===$.PUBLIC&&t[0].push(e),e.OwnPrompt&&t[1].push(e),t),[[],[]]),await this.insertPromptTemplatesSection()},createObserver(){let t=new MutationObserver(t=>{t.forEach(async t=>{if("childList"!==t.type&&0==t.addedNodes.length)return;let e=t.addedNodes[0];e&&e.querySelector&&await this.handleElementAdded(e)})});t.observe(document.body,{subtree:!0,childList:!0})},replaceFetch(){window.fetch=async(...t)=>{await this.insertPromptTemplatesSection();let e=[{platform:"YouTube",regex:/(?:https?:\/\/)?(?:www\.)?(?:youtube\.com|youtu\.be)\/(?:watch\?v=|embed\/)?([a-zA-Z0-9_-]{11})/,embedFormat:'<iframe id="myVideo" width="560" height="315" src="https://www.youtube.com/embed/{id}" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>'},{platform:"Vimeo",regex:/(?:https?:\/\/)?(?:www\.)?vimeo\.com\/(\d+)/,embedFormat:'<iframe id="myVideo" src="https://player.vimeo.com/video/{id}" width="640" height="360" frameborder="0" allow="autoplay; fullscreen; picture-in-picture" allowfullscreen></iframe>'}],r=document.querySelectorAll("a");if(r.forEach(t=>{let s=e.find(e=>t.href.match(e.regex));if(s){let r=t.href.match(s.regex);if(r&&r[1]){let o=r[1],i=s.embedFormat.replace("{id}",o),a=document.createElement("div");a.innerHTML=i,t.replaceWith(a.firstChild)}}}),t[0]!==l||!this.SelectedPromptTemplate&&!this.Tone&&!this.WritingStyle&&!this.TargetLanguage)return this.fetch(...t);let o=this.SelectedPromptTemplate;o&&this.Client.usePrompt(o.ID,S.SEND),this.showContinueActionsButton();try{let i=t[1],a=JSON.parse(i.body);if(o){let p=a.messages[0].content.parts[0],m=(this.TargetLanguage?this.TargetLanguage:DefaultTargetLanguage).replace("*",""),n=o.Prompt.replaceAll(c,p).replaceAll(h,m);o.PromptVariables&&o.PromptVariables.forEach(t=>{let e=document.querySelector("#"+variableIDPrefix+t.ID);e&&(n=n.replaceAll(I.replace("{idx}",t.ID),e.value))}),n=n.replaceAll(A,""),a.messages[0].content.parts[0]=n}let P=[],d=this.Tone?this.Tones.find(t=>t.ID===this.Tone):null;d&&(P.push(`${d.Label.toLowerCase()} tone`),this.Client.usePrompt(`${d.ID}`,S.SEND));let u=this.WritingStyle?this.WritingStyles.find(t=>t.ID===this.WritingStyle):null;return u&&(P.push(`${u.Label.toLowerCase()} ${s("writingstyle")}`),this.Client.usePrompt(`${u.ID}`,S.SEND)),!o&&this.TargetLanguage&&P.push(`${this.TargetLanguage.replace("*","")} ${s("language")}`),P.length>0&&(a.messages[0].content.parts[0]+=`

${s("Pleasewritein")} ${P.join(", ")}.`),await this.selectPromptTemplateByIndex(null),i.body=JSON.stringify(a),this.fetch(t[0],i)}catch(g){return console.error("Error modifying request body",g),this.fetch(...t)}}},async handleElementAdded(t){if("headlessui-portal-root"===t.id||"language-select-wrapper"===t.id){this.setupSidebar();return}if(t.querySelector("h1.text-4xl")){await this.insertPromptTemplatesSection();let e=document.getElementById("export-button");e&&(e.style="pointer-events: none;opacity: 0.5"),this.insertLanguageToneWritingStyleContinueActions()}if(document.querySelector(".xl\\:max-w-3xl")){let s=document.getElementById("export-button");s&&(s.style=""),this.insertLanguageToneWritingStyleContinueActions()}document.querySelector(".whitespace-pre-wrap")&&this.insertSavePromptAsTemplateButton()},insertSavePromptAsTemplateButton(){let t=document.querySelector(".flex.flex-col.items-center .whitespace-pre-wrap:not(:has(*))");if(!t)return;let e=t.parentElement.parentElement.querySelector("button");if(!e)return;this.showContinueActionsButton();let r=e.parentElement.querySelector(".save-prompt-button");!r&&((r=document.createElement("button")).className="save-prompt-button AIBestPrompts__p-1 AIBestPrompts__rounded-md hover:AIBestPrompts__bg-gray-100 hover:AIBestPrompts__text-gray-700 dark:AIBestPrompts__text-gray-400 dark:hover:AIBestPrompts__bg-gray-700 dark:hover:AIBestPrompts__text-gray-200 disabled:dark:hover:AIBestPrompts__text-gray-400 md:AIBestPrompts__invisible md:group-hover:AIBestPrompts__visible md:group-hover:visible",r.title=s("Savepromptastemplate"),r.addEventListener("click",this.showSavePromptModal.bind(this)),r.innerHTML=O("Save"),e.parentElement.prepend(r))},getActivities(t="all"){let e=this.Activities.filter(e=>!t||"all"===t||e.TopicID===t);return[...new Set(e.map(t=>t.Label)),].map(t=>({ID:this.Activities.find(e=>e.Label===t).ID,Label:t}))},validatePrompt(t){let e=[],r=[...this.PromptTemplates,...this.OwnPrompts].find(e=>e.ID===t.ID),o=r&&r.PromptTypeNo!==t.PromptTypeNo;if(!this.canCreatePromptTemplate()&&!r){this.Client.UserQuota.promptQuotaExceeded();return}if(t.PromptTypeNo===$.PUBLIC&&!this.canCreatePublicPromptTemplate()&&(!r||o)){this.Client.UserQuota.publicPromptsQuotaExceeded();return}if(t.PromptTypeNo===$.PRIVATE&&!this.canCreatePrivatePromptTemplate()&&(!r||o)){this.Client.UserQuota.privatePromptsQuotaExceeded();return}t.PromptVariables=void 0,this.extractVariableDefinitions(t);let i=this.Client.UserQuota.promptVariableEnumMaxSize();if(t.PromptVariables){for(var a=0;a<t.PromptVariables.length;a++)if(t.PromptVariables[a].EnumS.length>i){this.Client.UserQuota.upgradePromptVariableEnumMaxSize(),t.PromptVariables=void 0;return}}t.PromptVariables=void 0;let p=[];if(t.PromptTypeNo!==$.PUBLIC||t.Prompt.includes(h)||p.push(h),t.Prompt.includes(c)||p.push(c),p.length>0&&e.push(`
        ${s("Makesureguidelines")}<br>
        ${s("Youmustuse")} ${p.join(" and ")} ${s("correctly")}. <br><br>
        ${s("AIBestPromptsguide")}
        `),e.length>0){let m=`
        <div>
          <strong>${s("Pleasefixerror")}</strong> <br><br>
          ${e.join("<br><br>")}
        </div>
      `;this.showNotification(f.ERROR,m,!1)}return 0===e.length},async savePromptAsTemplate(t){t.preventDefault();let r={},o=new FormData(t.target);for(let[i,a]of o)r[i]=a;if(r.PromptTypeNo=r.Public?$.PUBLIC:$.PRIVATE,await this.Client.checkUserStatus(),this.validatePrompt(r)){try{let p=await this.Client.savePrompt(r);r.RevisionTime=new Date().toISOString(),r.ID?this.updatePromptsState(r):("all"===this.PromptTopic||r.Community===this.PromptTopic)&&(r.ID=p.ID,this.OwnPrompts.push(r),r.Public&&this.PromptTemplates.push(r))}catch(m){if(m instanceof e&&m.ReactionNo===E.RXN_AIBestPrompts_OVER_LIMIT_PROMPTS){this.Client.UserQuota.promptQuotaExceeded();return}this.showNotification(f.ERROR,m instanceof e?m.message:s("Somethingwhenrong"));return}this.hideSavePromptModal(),this.showNotification(f.SUCCESS,s("Prompttemplatesave")),await this.insertPromptTemplatesSection(),null!=this.SelectedPromptTemplate&&r.ID==this.SelectedPromptTemplate.ID&&this.selectPromptTemplate(r)}},updatePromptsState(t){if(t.Community!==this.PromptTopic&&"all"!==this.PromptTopic){this.PromptTemplates=this.PromptTemplates.filter(e=>e.ID!==t.ID),this.OwnPrompts=this.OwnPrompts.filter(e=>e.ID!==t.ID);return}this.OwnPrompts=this.OwnPrompts.map(e=>e.ID===t.ID?t:e);let e=this.PromptTemplates.find(e=>e.ID===t.ID),s=t.PromptTypeNo===$.PUBLIC;if(!s&&e){this.PromptTemplates=this.PromptTemplates.filter(e=>e.ID!==t.ID);return}if(s&&!e){this.PromptTemplates.push(t);return}s&&e&&(this.PromptTemplates=this.PromptTemplates.map(e=>e.ID===t.ID?t:e))},showNotification(t=f.SUCCESS,e="",s=!0){let r="AIBestPrompts-Notification",o=document.getElementById(r);o||((o=document.createElement("div")).id=r);let i={[f.INFO]:"AIBestPrompts__bg-gray-500",[f.SUCCESS]:"AIBestPrompts__bg-green-500",[f.WARNING]:"AIBestPrompts__bg-orange-500",[f.ERROR]:"AIBestPrompts__bg-red-500"};o.innerHTML=`
      <div class="AIBestPrompts__fixed AIBestPrompts__flex AIBestPrompts__justify-center AIBestPrompts__w-full AIBestPrompts__top-2 AIBestPrompts__px-2 AIBestPrompts__z-50 AIBestPrompts__pointer-events-none">
        <div class="${i[t]} AIBestPrompts__flex AIBestPrompts__flex-row AIBestPrompts__inline-flex AIBestPrompts__pointer-events-auto AIBestPrompts__px-6 AIBestPrompts__py-3 AIBestPrompts__rounded-md AIBestPrompts__text-white" role="alert">
          <div class="AIBestPrompts__flex AIBestPrompts__gap-4">
            <p class="AIBestPrompts__max-w-md">${e}</p>
            <button>${O("Cross")}</button>
          </div>
        </div>
      </div>
    `,o.querySelector("button").addEventListener("click",()=>{o.remove()}),s&&setTimeout(()=>{o.remove()},5e3),document.body.appendChild(o)},hideModal:F,hideSavePromptModal(){this.hideModal("savePromptModal")},showReportPromptModal(t){C(t,this.PromptTemplates,this.reportPrompt.bind(this))},async showSavePromptModal(t){let e="",r=t&&t.type===editPromptTemplateEvent;if(r||await this.Client.checkUserStatus(),!this.canCreatePromptTemplate()&&!r){this.Client.UserQuota.promptQuotaExceeded();return}if(t&&t.type!==editPromptTemplateEvent){let o=t.target.closest("button"),i=o.parentElement.parentElement.parentElement.querySelector(".whitespace-pre-wrap");i&&(e=i.textContent)}let a=document.getElementById("savePromptModal");a||((a=document.createElement("div")).id="savePromptModal",a.addEventListener("submit",this.savePromptAsTemplate.bind(this)),document.body.appendChild(a)),a.innerHTML=`
      <div class="AIBestPrompts__fixed AIBestPrompts__inset-0 AIBestPrompts__text-center AIBestPrompts__transition-opacity AIBestPrompts__z-50">
        <div class="AIBestPrompts__absolute AIBestPrompts__bg-gray-900 AIBestPrompts__inset-0 AIBestPrompts__opacity-90">
        </div>

        <div class="AIBestPrompts__fixed AIBestPrompts__inset-0 AIBestPrompts__overflow-y-auto">
          <div class="AIBestPrompts__flex AIBestPrompts__items-center AIBestPrompts__justify-center AIBestPrompts__min-h-full">
            <form id="savePromptForm">
              <input type="hidden" name="ID"  />
              <input type="hidden" name="OwnPrompt" value="true" />         
              <input type="hidden" name="Views" value="0" />
              <input type="hidden" name="Usages" value="0" />
              <input type="hidden" name="Votes" value="0" />
              <input type="hidden" name="ForkedFromPromptID" />
              
              <div
              class="AIBestPrompts__align-center AIBestPrompts__bg-white dark:AIBestPrompts__bg-gray-800 dark:AIBestPrompts__text-gray-200 AIBestPrompts__inline-block AIBestPrompts__overflow-hidden sm:AIBestPrompts__rounded-lg AIBestPrompts__shadow-xl sm:AIBestPrompts__align-middle sm:AIBestPrompts__max-w-lg sm:AIBestPrompts__my-8 sm:AIBestPrompts__w-full AIBestPrompts__text-left AIBestPrompts__transform AIBestPrompts__transition-all"
              role="dialog" aria-modal="true" aria-labelledby="modal-headline">
          
                <div class="AIBestPrompts__bg-white dark:AIBestPrompts__bg-gray-800 AIBestPrompts__px-4 AIBestPrompts__pt-5 AIBestPrompts__pb-4 sm:AIBestPrompts__p-6 sm:AIBestPrompts__pb-4 AIBestPrompts__overflow-y-auto">
                  <label>${s("PromptTemplatelabel")}</label>
                  <textarea name="Prompt" class="AIBestPrompts__w-full AIBestPrompts__bg-gray-100 dark:AIBestPrompts__bg-gray-700 dark:AIBestPrompts__border-gray-700 AIBestPrompts__rounded AIBestPrompts__p-2 AIBestPrompts__mt-2 AIBestPrompts__mb-3" style="height: 120px;" required
                            placeholder="${s("Prompttextincludingplaceholders")}"
                            title="${s("Prompttextincludingplaceholders")}">${V(e)}</textarea>
            
                  <label>${s("Teaser")}</label>
                  <textarea name="Teaser" required
                    title="${s("Shortteasertemplate")}'"
                    class="AIBestPrompts__w-full AIBestPrompts__bg-gray-100 dark:AIBestPrompts__bg-gray-700 dark:AIBestPrompts__border-gray-700 AIBestPrompts__rounded AIBestPrompts__p-2 AIBestPrompts__mt-2 AIBestPrompts__mb-3" style="height: 71px;"
                    placeholder="${s("Createakeyword")}"></textarea>
                    
                  <label>${s("PromptHintlable")}</label>
                  <input name="PromptHint" required type="text"
                    title="${s("Prompthint")}"
                    class="AIBestPrompts__w-full AIBestPrompts__bg-gray-100 dark:AIBestPrompts__bg-gray-700 dark:AIBestPrompts__border-gray-700 AIBestPrompts__rounded AIBestPrompts__p-2 AIBestPrompts__mt-2 AIBestPrompts__mb-3" placeholder="${s("Prompthintholder")}" />

                  <label>${s("Title")}</label>
                  <input name="Title" type="text" 
                    title="${s("Prompttitledecs")}" class="AIBestPrompts__w-full AIBestPrompts__bg-gray-100 dark:AIBestPrompts__bg-gray-700 dark:AIBestPrompts__border-gray-700 AIBestPrompts__rounded AIBestPrompts__mb-3 AIBestPrompts__mt-2 AIBestPrompts__p-2 AIBestPrompts__w-full" />
            
                  <div class="AIBestPrompts__flex">
                    <div class="AIBestPrompts__mr-4 AIBestPrompts__w-full">
                      <label>${s("Topic")}</label>
                      <select name="Community" class="AIBestPrompts__mt-2 AIBestPrompts__mb-3 dark:AIBestPrompts__bg-gray-700 dark:AIBestPrompts__border-gray-700 dark:hover:AIBestPrompts__bg-gray-900 AIBestPrompts__rounded AIBestPrompts__w-full" required>
                        ${this.Topics.map(t=>`
                              <option value="${V(t.ID)}" ${t.ID===this.PromptTopic?"selected":""}>${V(t.Label)}</option>`).join("")}
                      </select>
                    </div>

                    <div class="AIBestPrompts__w-full">
                      <label>${s("Activity")}</label>
                      <select name="Category" class="AIBestPrompts__mt-2 AIBestPrompts__mb-3 dark:AIBestPrompts__bg-gray-700 dark:AIBestPrompts__border-gray-700 dark:hover:AIBestPrompts__bg-gray-900 AIBestPrompts__rounded AIBestPrompts__w-full" required>
                        ${this.getActivities("all"===this.PromptTopic?this.Topics[0].ID:this.PromptTopic).map(t=>`
                              <option value="${V(t.ID)}">${V(t.Label)}</option>`).join("")}
                      </select>
                    </div>
                  </div>

                  <div class="AIBestPrompts__block AIBestPrompts__mt-4">
                    <label class="AIBestPrompts__text-sm" id="savePromptForm-public-checkbox">
                      <input name="Public" value="true" type="checkbox" class="AIBestPrompts__mr-2 dark:AIBestPrompts__bg-gray-700"> 
                      ${s("Sharepromptpublicly")}
                    </label>
                    <!--
                    <div class="AIBestPrompts__flex AIBestPrompts__justify-between AIBestPrompts__mt-4">
                      <div class="AIBestPrompts__mr-4 AIBestPrompts__w-full"><label>${s("AuthorName")}</label>
                        <input name="AuthorName" type="text" title="${s("AuthorNamevisibleforallusers")}"
                              placeholder="${s("AuthorName")}" class="AIBestPrompts__bg-gray-100 dark:AIBestPrompts__bg-gray-700 dark:AIBestPrompts__border-gray-700 AIBestPrompts__rounded AIBestPrompts__mb-3 AIBestPrompts__mt-2 AIBestPrompts__p-2 AIBestPrompts__w-full" />
                      </div>

                      <div class="AIBestPrompts__w-full"><label>${s("AuthorURL")}</label>
                        <input name="AuthorURL" type="url" title="${s("AuthorURLvisibleforallusers")}"
                              placeholder="https://www.example.com/" class="AIBestPrompts__bg-gray-100 dark:AIBestPrompts__bg-gray-700 dark:AIBestPrompts__border-gray-700 AIBestPrompts__rounded AIBestPrompts__mb-3 AIBestPrompts__mt-2 AIBestPrompts__p-2 AIBestPrompts__w-full" />
                      </div>                      
                    </div>  
                    -->
                    
                    <a class="AIBestPrompts__mt-4 AIBestPrompts__text-sm AIBestPrompts__underline AIBestPrompts__hidden" 
                        id="savePromptForm-forked-from" href="https:/app.aibest.io/prompt/"
                        rel="noopener noreferrer" target="_blank">
                     ${s("ForkedFrom")}
                    </a>
                  </div>
            
                  <p class="AIBestPrompts__mt-6 AIBestPrompts__text-[10px]" id="savePromptForm-public-disclaimer">${s("PleaseNotConfidential")}</p>
                </div>
            
                <div class="AIBestPrompts__bg-gray-200 dark:AIBestPrompts__bg-gray-700 AIBestPrompts__px-4 AIBestPrompts__py-3 AIBestPrompts__text-right">
                  <button type="button" class="AIBestPrompts__bg-gray-600 hover:AIBestPrompts__bg-gray-800 AIBestPrompts__mr-2 AIBestPrompts__px-4 AIBestPrompts__py-2 AIBestPrompts__rounded AIBestPrompts__text-white"
                          onclick="AIBestPrompts.hideSavePromptModal()"> ${s("Cancel")}
                  </button>
                  <button type="submit" class="AIBestPrompts__bg-green-600 hover:AIBestPrompts__bg-green-700 AIBestPrompts__mr-2 AIBestPrompts__px-4 AIBestPrompts__py-2 AIBestPrompts__rounded AIBestPrompts__text-white">${s("SavePrompt")}
                  </button>
                </div>
            
              </div>
            </form>
          </div>
        </div>
        
      </div>
    `,a.querySelector('select[name="Community"]').onchange=t=>{a.querySelector('select[name="Category"]').innerHTML=this.getActivities(t.target.value).map(t=>`
            <option value="${V(t.ID)}">${V(t.Label)}</option>`).join("")},a.style="display: block;",document.addEventListener("keydown",t=>{"Escape"===t.key&&this.hideSavePromptModal()})},addExportButton(){let t=document.querySelector("nav");if(!t||t.querySelector("#export-button"))return;let e=document.createElement("a");e.id="export-button",e.className=N`ExportButton`,e.innerHTML=`${O`Export`} ${s("ExportChat")}`,e.onclick=this.exportCurrentChat.bind(this),document.querySelector(".flex-1.overflow-hidden h1")&&(e.style="pointer-events: none;opacity: 0.5");let r=[...t.children].find(t=>t.innerText.includes(s("Logout")));t.insertBefore(e,r);let o=document.createElement("a");o.id="AppName",o.className=N`VersionInfo`,o.innerHTML=`${O`Rocket`}`+a,o.href=p,o.target="_blank";let i=[...t.children].find(t=>t.innerText.includes(s("Logout")));t.insertBefore(o,i)},getNewChatButtons(){let t=document.querySelector("nav"),e=document.querySelector(".sticky"),s=[...t?.querySelectorAll(".cursor-pointer")??[],].find(t=>"New chat"===t.innerText),r=e?.querySelector("button.px-3");return[s,r].filter(t=>t)},async getCurrentPromptTemplates(){if(this.PromptTemplatesType!==v.CUSTOM_LIST)return this.PromptTemplatesType===v.OWN?this.OwnPrompts:this.PromptTemplates.filter(t=>!t.ForkedFromPromptID);let t=this.Lists.withID(this.PromptTemplatesList);if(!t)return console.error("getCurrentPromptTemplates: No list found for ID",this.PromptTemplatesList),[];let e=await t.getPromptIDS();if(!e)return[];let s=[...this.PromptTemplates,...this.OwnPrompts].filter(t=>e.includes(t.ID));return[...new Map(s.map(t=>[t.ID,t])).values()]},async filterPromptTemplates(t){let e=this.Lists.getHidden();return t.filter(t=>(!t.IsHidden||this.PromptTemplatesType===v.CUSTOM_LIST&&this.PromptTemplatesList===e?.ID)&&("all"===this.PromptActivity||t.Category===this.PromptActivity)&&(!this.PromptSearch||t.Teaser.toLowerCase().includes(this.PromptSearch.toLowerCase())||t.Title.toLowerCase().includes(this.PromptSearch.toLowerCase())))},async insertPromptTemplatesSection(){if(!this.Topics.length||!this.Activities.length){console.error("insertPromptTemplatesSection: No topics or activities found, skipping prompt templates");return}let t=document.querySelector("h1.text-4xl");parentAIBestPrompts=t?t.parentElement:document.querySelector("#__next"),t?(t.style="display: none",t.nextSibling&&"templates-wrapper"!==t.nextSibling.id&&(t.nextSibling.style="display: none;")):console.log("insertPromptTemplatesSection: No title element found, skipping prompt templates");let e=this.PromptTemplates;if(!e){console.error("insertPromptTemplatesSection: No prompt templates found, skipping prompt templates");return}if(e=await this.filterPromptTemplates(e=await Promise.all((e=await this.getCurrentPromptTemplates()).map(async(t,e)=>({...t,ID:e,IsHidden:await this.isHidden(e)})))),!parentAIBestPrompts){console.error("insertPromptTemplatesSection: No parent element found, skipping prompt templates");return}parentAIBestPrompts.classList.remove("md:h-full","md:max-w-2xl","lg:max-w-3xl"),parentAIBestPrompts.classList.add("AIBestPrompts__w-full"),parentAIBestPrompts.classList.add("overflow-y-auto"),parentAIBestPrompts.classList.add("overflow-hidden"),parentAIBestPrompts.classList.add("w-full"),parentAIBestPrompts.classList.add("h-full"),parentAIBestPrompts.classList.add("relative"),parentAIBestPrompts.classList.add("flex");let{currentPage:r,pageSize:i}=this.PromptTemplateSection,a=Math.min(i*(r+1),e.length),p=await Promise.all(e.slice(i*r,a).map(async t=>({...t,IsFavorite:await this.isFavorite(t.ID),IsVerified:await this.isVerified(t.ID)}))),m=this.Lists.getFavorites();this.PromptTemplatesList,m?.ID;let l=this.Lists.getHidden(),n=this.Lists.getCustom(),P=n.map(t=>t.ID),d=this.Lists.getAIBestPromptsVerified();this.PromptTemplatesType===v.CUSTOM_LIST&&(P.includes(this.PromptTemplatesList)||d?.ID===this.PromptTemplatesList&&d.OwnList);let c=`
    <div class="paginationContainer AIBestPrompts__flex AIBestPrompts__flex-1 AIBestPrompts__gap-3.5 AIBestPrompts__justify-between AIBestPrompts__items-center AIBestPrompts__flex-col sm:AIBestPrompts__flex-row AIBestPrompts__mt-6">
     
      <div class="${N`paginationButtonGroup`}">
        <button onclick="AIBestPrompts.prevPromptTemplatesPage()" class="${N`paginationButton`}" style="border-radius: 6px 0 0 6px">${s("Prev")}</button>
        <button onclick="AIBestPrompts.nextPromptTemplatesPage()" class="${N`paginationButton`} AIBestPrompts__border-0 AIBestPrompts__border-l AIBestPrompts__border-gray-500" style="border-radius: 0 6px 6px 0">${s("Next")}</button>
      </div>
    </div>
  `,h=`
    

    <div class="${N`column`} AIBestPrompts__relative AIBestPrompts__w-full" style="min-width: 0">


      <div class="lg:AIBestPrompts__absolute AIBestPrompts__top-0 AIBestPrompts__right-0 AIBestPrompts__text-right">
        <div class="AIBestPrompts__mb-2">
          ${this.Client.AppUser?`
                <div class="AIBestPrompts__mb-2">
                  <div>
                    Hello, <a target="_blank" href="${o}">
                      ${V(this.Client.AppUser.Name)}
                    </a> - 
                    <a target="_blank" href="${o}">${s("YourAccount")}</a>
                  </div>
                </div>`:`<a href="${o}?action=connect" target="blank">${s("Login")}</a>`}
        </div>        
        
        ${this.isAdmin()?`
              <label class="AIBestPrompts__relative AIBestPrompts__inline-flex AIBestPrompts__items-center AIBestPrompts__mb-5 AIBestPrompts__cursor-pointer AIBestPrompts__flex-col" title="Admin Mode">
                <input type="checkbox" value="" class="AIBestPrompts__sr-only AIBestPrompts__peer" id="adminMode" onchange="AIBestPrompts.toggleAdminMode()" ${this.AdminMode?" checked":""}>
                <div class="AIBestPrompts__w-9 AIBestPrompts__h-5 AIBestPrompts__bg-gray-200 peer-focus:AIBestPrompts__outline-none AIBestPrompts__rounded-full AIBestPrompts__peer dark:AIBestPrompts__bg-gray-700 peer-checked:after:AIBestPrompts__translate-x-full peer-checked:after:AIBestPrompts__border-white after:AIBestPrompts__content-[''] after:AIBestPrompts__absolute after:AIBestPrompts__top-[2px] after:AIBestPrompts__left-[2px] after:AIBestPrompts__bg-white after:AIBestPrompts__border-gray-300 after:AIBestPrompts__border after:AIBestPrompts__rounded-full after:AIBestPrompts__h-4 after:AIBestPrompts__w-4 after:AIBestPrompts__transition-all dark:AIBestPrompts__border-gray-600 peer-checked:AIBestPrompts__bg-gray-600"></div>
                <span class="AIBestPrompts__ml-3 AIBestPrompts__text-sm AIBestPrompts__font-medium AIBestPrompts__text-gray-900 dark:AIBestPrompts__text-gray-300"></span>
              </label>
            `:""}
      </div>
    <div id="AIB_main" class="Main_modal">
      <!-- Add your content here -->
    


      
      
      <h2 class="${N`h2`}"></h2>
      
      <ul class="Main_tabs AIBestPrompts__border-b AIBestPrompts__border-gray-200 dark:AIBestPrompts__border-gray-700 dark:AIBestPrompts__text-gray-400 md:AIBestPrompts__flex AIBestPrompts__flex-wrap AIBestPrompts__font-medium AIBestPrompts__text-center AIBestPrompts__text-gray-500 AIBestPrompts__text-sm AIBestPrompts__whitespace-nowrap">
  
        <li class="AIBestPrompts__flex-1 AIBestPrompts__mr-2">
          <a href="#" id="favoritePromptsTab" title="${s("YourFavorites")}" 
            onclick="${m?`AIBestPrompts.changePromptTemplatesType('${v.CUSTOM_LIST}', '${m.ID}')`:"AIBestPrompts.Client.UserQuota.canUseFavorites(AIBestPrompts.Lists) ? AIBestPrompts.howToUseFavoriteList() : null"}" 
            class="${m&&this.PromptTemplatesType===v.CUSTOM_LIST&&this.PromptTemplatesList===m.ID?"AIBestPrompts__bg-gray-50 dark:AIBestPrompts__bg-white/5":""} dark:hover:AIBestPrompts__bg-gray-900 dark:hover:AIBestPrompts__text-gray-300 hover:AIBestPrompts__bg-gray-50 hover:AIBestPrompts__text-gray-600 AIBestPrompts__p-4 AIBestPrompts__rounded-t-lg AIBestPrompts__flex AIBestPrompts__justify-center AIBestPrompts__w-full">
            ${O("StarSolidLarge")} &nbsp; ${s("Favorites")} 
          </a>
        </li>

        <li class="AIBestPrompts__flex-1 AIBestPrompts__mr-2">
          <a href="#" id="AIBestPromptsVerifiedPromptsTab" title="${s("YourAIBestPromptsVerified")}" 
            onclick="AIBestPrompts.Client.UserQuota.canUseAIBestPromptsVerifiedList() ? AIBestPrompts.changePromptTemplatesType('${v.CUSTOM_LIST}', '${d?.ID}') : ''"
            class="${d&&this.PromptTemplatesType===v.CUSTOM_LIST&&this.PromptTemplatesList===d?.ID?"AIBestPrompts__bg-gray-50 dark:AIBestPrompts__bg-white/5":""} dark:hover:AIBestPrompts__bg-gray-900 dark:hover:AIBestPrompts__text-gray-300 hover:AIBestPrompts__bg-gray-50 hover:AIBestPrompts__text-gray-600 AIBestPrompts__p-4 AIBestPrompts__rounded-t-lg AIBestPrompts__flex AIBestPrompts__justify-center AIBestPrompts__w-full">
            ${O("CheckBadgeSolidLarge")} &nbsp; ${s("AIBestPromptsVerified")}
          </a>
        </li>

        <li class="AIBestPrompts__flex-1 AIBestPrompts__mr-2">
          <a href="#" id="publicPromptsTab" onclick="AIBestPrompts.changePromptTemplatesType('${v.PUBLIC}')" 
          class="${this.PromptTemplatesType===v.PUBLIC?"AIBestPrompts__bg-gray-50 dark:AIBestPrompts__bg-white/5":""} dark:hover:AIBestPrompts__bg-gray-900 dark:hover:AIBestPrompts__text-gray-300 hover:AIBestPrompts__bg-gray-50 hover:AIBestPrompts__text-gray-600 AIBestPrompts__inline-block AIBestPrompts__p-4 AIBestPrompts__rounded-t-lg AIBestPrompts__w-full">
          ${O("People")} &nbsp; ${s("Public")}
          </a>
        </li>
        <li class="AIBestPrompts__flex-1 AIBestPrompts__mr-2">
          <a href="#" id="ownPromptsTab" onclick="AIBestPrompts.changePromptTemplatesType('${v.OWN}')" 
          class="${this.PromptTemplatesType===v.OWN?"AIBestPrompts__bg-gray-50 dark:AIBestPrompts__bg-white/5":""} dark:hover:AIBestPrompts__bg-gray-900 dark:hover:AIBestPrompts__text-gray-300 hover:AIBestPrompts__bg-gray-50 hover:AIBestPrompts__text-gray-600 AIBestPrompts__inline-block AIBestPrompts__p-4 AIBestPrompts__rounded-t-lg AIBestPrompts__w-full">
          ${O("Me")} &nbsp; ${s("Own")}
          </a>
        </li>

       <!--
        <li class="AIBestPrompts__flex-1">
          <a href="#" id="hiddenPromptsTab" title="${s("HiddenPrompt")}" 
          onclick="${l?`AIBestPrompts.changePromptTemplatesType('${v.CUSTOM_LIST}', '${l.ID}')`:"AIBestPrompts.Client.UserQuota.canUseHidden(AIBestPrompts.Lists) ? AIBestPrompts.howToUseHiddenList() : null"}" 
          class="${l&&this.PromptTemplatesType===v.CUSTOM_LIST&&this.PromptTemplatesList===l.ID?"AIBestPrompts__bg-gray-50 dark:AIBestPrompts__bg-white/5":""} dark:hover:AIBestPrompts__bg-gray-900 dark:hover:AIBestPrompts__text-gray-300 hover:AIBestPrompts__bg-gray-50 hover:AIBestPrompts__text-gray-600 AIBestPrompts__p-4 AIBestPrompts__rounded-t-lg AIBestPrompts__flex AIBestPrompts__justify-center AIBestPrompts__w-full">
            ${O("CrossLarge")} &nbsp; ${s("Hidden")}
          </a>
        </li>
        -->
      </ul>

      <div class="promptSearchInput AIBestPrompts__text-center" >
        <input id="promptSearchInput" type="text" class="AIBestPrompts__bg-gray-100 AIBestPrompts__border-0 AIBestPrompts__text-sm AIBestPrompts__rounded AIBestPrompts__block_ AIBestPrompts__w-full dark:AIBestPrompts__bg-gray-700 dark:AIBestPrompts__border-gray-600 dark:AIBestPrompts__placeholder-gray-400 dark:AIBestPrompts__text-white hover:AIBestPrompts__bg-gray-200 focus:AIBestPrompts__ring-0 md:AIBestPrompts__w-[260px]" placeholder="${s("Search")}" 
        value="${V(this.PromptSearch)}" onfocus="this.value = this.value">
      </div>

      <div class="Filter_search AIBestPrompts__grid AIBestPrompts__grid-cols-2 sm:AIBestPrompts__flex AIBestPrompts__flex-row AIBestPrompts__gap-3 AIBestPrompts__items-end AIBestPrompts__justify-between AIBestPrompts__w-full md:last:AIBestPrompts__mb-6 AIBestPrompts__pt-2 AIBestPrompts__stretch AIBestPrompts__text-left AIBestPrompts__text-sm">
        <div>
<!--          <label for="topicSelect" class="AIBestPrompts__block AIBestPrompts__text-sm AIBestPrompts__font-medium">${s("Topic")}</label>-->
      
          <select id="topicSelect" class="AIBestPrompts__bg-gray-100 AIBestPrompts__border-0 AIBestPrompts__text-sm AIBestPrompts__rounded AIBestPrompts__block AIBestPrompts__w-full dark:AIBestPrompts__bg-gray-700 dark:AIBestPrompts__border-gray-600 dark:AIBestPrompts__placeholder-gray-400 dark:AIBestPrompts__text-white hover:AIBestPrompts__bg-gray-200 focus:AIBestPrompts__ring-0 dark:hover:AIBestPrompts__bg-gray-900">
            <option value="all" 
            ${"all"===this.PromptTopic?"selected":""}>${s("AllTopic")}</option>

            ${this.Topics.map(t=>`<option value="${V(t.ID)}" ${this.PromptTopic===t.ID?"selected":""}>${V(t.Label)}</option>`).join("")}
          </select>
        </div>

       

        <div>
          <!-- <label for="sortBySelect" class="AIBestPrompts__block AIBestPrompts__text-sm AIBestPrompts__font-medium">${s("Sortby")}</label> -->
      
          <select id="sortBySelect" class="AIBestPrompts__bg-gray-100 AIBestPrompts__border-0 AIBestPrompts__text-sm AIBestPrompts__rounded AIBestPrompts__block AIBestPrompts__w-full dark:AIBestPrompts__bg-gray-700 dark:AIBestPrompts__border-gray-600 dark:AIBestPrompts__placeholder-gray-400 dark:AIBestPrompts__text-white hover:AIBestPrompts__bg-gray-200 focus:AIBestPrompts__ring-0 dark:hover:AIBestPrompts__bg-gray-900">
            ${Object.keys(w).map(t=>`
                <option value="${w[t]}" ${this.PromptSortMode===w[t]?"selected":""}>${U(t.replace("_"," "))}</option>`).join("")}
          </select>
        </div>

        ${e.length>this.PromptTemplateSection.pageSize?c:""}
        
        
      </div>
      
      

      
      
      <ul id="ABI_List_prompts" class="${N`ul`} ABI_List_prompts AIBestPrompts__grid AIBestPrompts__grid-cols-1 lg:AIBestPrompts__grid-cols-1 2xl:AIBestPrompts__grid-cols-1">
        ${p.map(t=>`
          <button onclick="AIBestPrompts.selectPromptTemplateByIndex(${t.ID})" class="${N`card`} AIBestPrompts__relative AIBestPrompts__group">
            

            <div class="AIBestPrompts__flex AIBestPrompts__items-start AIBestPrompts__w-full AIBestPrompts__justify">
              <div class="AIBestPrompts__flex AIBestPrompts__items-start AIBestPrompts__w-full AIBestPrompts__justify" style="margin-top: 0.25rem;">
                <div class="iconshere PUBLICorPrivate">
                  ${t.PromptTypeNo===$.PUBLIC?`<span class="AIBestPrompts__mr-1" title="Public">${O("Globe")}</span>`:`<span class="AIBestPrompts__mr-1" title="Private">${O("Lock")}</span>`}
                </div>


                <div class="AIBestPrompts_catagories">

                  <span title="${s("Topic")}: ${V(this.getTopicLabel(t.Community))}">
                    ${V(this.getTopicLabel(t.Community))}
                  </span>
                </div>
              </div>
             
        

              <div class="AIBestPrompts__flex AIBestPrompts__gap-4 AIBestPrompts__justify-center lg:AIBestPrompts__gap-1 lg:AIBestPrompts__pl-2 AIBestPrompts__mt-1 AIBestPrompts__right-2 AIBestPrompts__text-gray-400 lg:AIBestPrompts__invisible group-hover:AIBestPrompts__visible" >

                ${this.isAdminMode()?`
                    <a title="${s("Viewsource")}" class="AIBestPrompts__p-1 AIBestPrompts__rounded-md hover:AIBestPrompts__bg-gray-100 hover:AIBestPrompts__text-gray-700 dark:AIBestPrompts__text-gray-400 dark:hover:AIBestPrompts__bg-gray-700 dark:hover:AIBestPrompts__text-gray-200 disabled:dark:hover:AIBestPrompts__text-gray-400" onclick="event.stopPropagation(); AIBestPrompts.viewPromptTemplateSource(${t.ID})">${O("Eye")}</a>
                    `:""}

                ${t.OwnPrompt?"":`                   
                    <a title="${s("Reportprompt")}" class="AIBestPrompts__p-1 AIBestPrompts__rounded-md hover:AIBestPrompts__bg-gray-100 hover:AIBestPrompts__text-gray-700 dark:AIBestPrompts__text-gray-400 dark:hover:AIBestPrompts__bg-gray-700 dark:hover:AIBestPrompts__text-gray-200 disabled:dark:hover:AIBestPrompts__text-gray-400" onclick="event.stopPropagation(); AIBestPrompts.showReportPromptModal(${t.ID})">${O("Report")}</a>    
                    
                    `}
                
                ${t.OwnPrompt||this.isAdminMode()?`
                  <a title="${s("Deleteprompt")}" class="AIBestPrompts__p-1 AIBestPrompts__rounded-md hover:AIBestPrompts__bg-gray-100 hover:AIBestPrompts__text-gray-700 dark:AIBestPrompts__text-gray-400 dark:hover:AIBestPrompts__bg-gray-700 dark:hover:AIBestPrompts__text-gray-200 disabled:dark:hover:AIBestPrompts__text-gray-400" onclick="event.stopPropagation(); AIBestPrompts.deletePromptTemplate(${t.ID})">${O("Trash")}</a>
                  <a title="${s("Editprompt")}" class="AIBestPrompts__p-1 AIBestPrompts__rounded-md hover:AIBestPrompts__bg-gray-100 hover:AIBestPrompts__text-gray-700 dark:AIBestPrompts__text-gray-400 dark:hover:AIBestPrompts__bg-gray-700 dark:hover:AIBestPrompts__text-gray-200 disabled:dark:hover:AIBestPrompts__text-gray-400" onclick="event.stopPropagation(); AIBestPrompts.editPromptTemplate(${t.ID})">${O("Edit")}</a>
                  `:""}

              </div>
            </div>
            <div class="AIBestPrompts__flex AIBestPrompts__items-start AIBestPrompts__w-full AIBestPrompts__justify-between">
            <h3 class="${N`h3`}" style="overflow-wrap: anywhere; ${t.IsVerified,""}">
                ${V(t.Title)}
                ${t.IsVerified?`
                      <span class="AIBestPrompts__ml-1 AIBestPrompts__inline-block" 
                            style="" 
                            title="${s("VerifiedPrompt")}">
                        ${t.IsVerified?O("CheckBadgeSolidLarge"):""}
                      </span>`:""}
              </h3>   
              


            <div class="AIBestPrompts_ForkedFromPromptID">
          
            ${t.ForkedFromPromptID?`\xb7 
                <a class="AIBestPrompts__mx-1 AIBestPrompts__underline" 
                  onclick="event.stopPropagation()"  
                  href="https://app.aibest.io/prompts/${t.ForkedFromPromptID}"
                  rel="noopener noreferrer" target="_blank" 
                  title="${s("Forkedfrom")} ${t.ForkedFromPromptID}">
                 ${s("ForkedFrom")}
                </a>`:""}
          </div> 
            </div>   

            
            <p class="${N`p`} AIBestPrompts__text-gray-600 dark:AIBestPrompts__text-gray-200 AIBestPrompts__overflow-hidden AIBestPrompts__text-ellipsis" style="display: -webkit-box; -webkit-line-clamp: 3; -webkit-box-orient: vertical;"
              title="${V(t.Teaser)}">
              ${V(t.Teaser)}
            </p>

          <div class="AIBestPrompts__text-gray-500 AIBestPrompts__text-xs AIBestPrompts__flex AIBestPrompts__w-full AIBestPrompts__justify-between AIBestPrompts__mt-auto" style="    padding-top: 1rem;">
              <span class="AIBestPrompts__flex AIBestPrompts__items-center" title="${s("Views")} (${t.Views})">
                <span class="AIBestPrompts__p-1">${O("Eye")}</span> &nbsp; ${M(t.Views)}
              </span>

              <!--span class="AIBestPrompts__flex AIBestPrompts__items-center" title="${s("Usages")} (${t.Usages})">
                <span class="AIBestPrompts__p-1">${O("Quote")}</span> &nbsp; ${M(t.Usages)}
              </span-->

              <span class="AIBestPrompts__flex AIBestPrompts__items-center" title="${s("Votes")} (${t.Votes})">
                ${t.OwnPrompt?`${O("ThumbUp")}`:`<a title="${s("Votes")} (${t.Votes}) - ${s("VotesUp")}"
                      class="AIBestPrompts__p-1 AIBestPrompts__rounded-md hover:AIBestPrompts__bg-gray-100 hover:AIBestPrompts__text-gray-700 dark:AIBestPrompts__text-gray-400 dark:hover:AIBestPrompts__bg-gray-700 dark:hover:AIBestPrompts__text-gray-200 disabled:dark:hover:AIBestPrompts__text-gray-400" onclick="event.stopPropagation(); AIBestPrompts.voteThumbsUp(${t.ID})">${O("ThumbUp")}</a>`}
                &nbsp; ${M(t.Votes)}

                ${t.OwnPrompt?"":`&nbsp; <a title="${s("Votes")} (${t.Votes}) - ${s("VotesDown")}"
                      class="AIBestPrompts__p-1 AIBestPrompts__rounded-md hover:AIBestPrompts__bg-gray-100 hover:AIBestPrompts__text-gray-700 dark:AIBestPrompts__text-gray-400 dark:hover:AIBestPrompts__bg-gray-700 dark:hover:AIBestPrompts__text-gray-200 disabled:dark:hover:AIBestPrompts__text-gray-400" onclick="event.stopPropagation(); AIBestPrompts.voteThumbsDown(${t.ID})">${O("ThumbDown")}</a>`}
              </span>

                            
              ${t.IsHidden?"":`
                  <span class="AIBestPrompts__flex AIBestPrompts__items-center" title="${s("Favorites")}">
                    <a class="AIBestPrompts__p-1 AIBestPrompts__rounded-md hover:AIBestPrompts__bg-gray-100 hover:AIBestPrompts__text-gray-700 dark:AIBestPrompts__text-gray-400 dark:hover:AIBestPrompts__bg-gray-700 dark:hover:AIBestPrompts__text-gray-200 disabled:dark:hover:AIBestPrompts__text-gray-400" 
                    onclick="event.stopPropagation(); AIBestPrompts.copyPromptDeepLink(${t.ID})" title="${s("Copylinkprompt")}">
                    ${O("Link")}
                    </a>
                    <a title="${t.IsFavorite?s("Removepromptfrom"):s("Addpromptto")} ${s("Favorites")}" class="AIBestPrompts__p-1 AIBestPrompts__rounded-md hover:AIBestPrompts__bg-gray-100 hover:AIBestPrompts__text-gray-700 dark:AIBestPrompts__text-gray-400 dark:hover:AIBestPrompts__bg-gray-700 dark:hover:AIBestPrompts__text-gray-200 disabled:dark:hover:AIBestPrompts__text-gray-400" onclick="event.stopPropagation(); ${t.IsFavorite?`AIBestPrompts.removeFromFavoritesList(${t.ID})`:`AIBestPrompts.addToFavoritesList(${t.ID})`}">${t.IsFavorite?O("StarSolid"):O("Star")}</a>
                    </span>`}
              
          </div>
          
        </button>
      `).join("")}
            
        ${this.PromptTemplatesType===v.OWN?`<button onclick="AIBestPrompts.showSavePromptModal()" class="${N`card`} AIBestPrompts__relative AIBestPrompts__group AIBestPrompts__justify-center AIBestPrompts__items-center">
            <div class="AIBestPrompts__flex AIBestPrompts__items-center AIBestPrompts__gap-3">
              ${O("Plus")}
              ${s("Addnewprompttemplate")}
            </div>
          </button>`:""}
      </ul>
    
      ${e.length>this.PromptTemplateSection.pageSize?c:""}
      
    </div>
    
    </div>
   `,I=document.createElement("div");I.id="templates-wrapper";let A=document.querySelectorAll(".nonewtask");t?(console.log("in newtask screen templates-wrapper newtask"),I.className="templates-wrapper newtask flex-shrink-0 bg-gray-900 md:flex md:w-[260px] md:flex-col AIBestPrompts_templates-wrapper AIBestPrompts__mt-6 md:AIBestPrompts__flex AIBestPrompts__items-start AIBestPrompts__text-center AIBestPrompts__gap-2.5 AIBestPrompts__max-w-full AIBestPrompts__m-auto sm:AIBestPrompts__mx-4 AIBestPrompts__text-sm",A.forEach(t=>{t.style.display="none"})):(console.log("NOT in newtask screen templates-wrapper nonewtask"),I.className="templates-wrapper nonewtask flex-shrink-0 bg-gray-900 md:flex md:w-[260px] md:flex-col AIBestPrompts_templates-wrapper modal-wrapper AIBestPrompts__mt-6 md:AIBestPrompts__flex AIBestPrompts__items-start AIBestPrompts__text-center AIBestPrompts__gap-2.5 AIBestPrompts__max-w-full AIBestPrompts__m-auto sm:AIBestPrompts__mx-4 AIBestPrompts__text-sm",A.forEach(t=>{t.style.display="block"})),parentAIBestPrompts.querySelector("#templates-wrapper")?I=parentAIBestPrompts.querySelector("#templates-wrapper"):parentAIBestPrompts.appendChild(I),I.innerHTML=h;let u=document.getElementById("ABI_List_prompts");t?u&&(u.className="AIBestPrompts__gap-3.5 ABI_List_prompts _newtask AIBestPrompts__grid AIBestPrompts__grid-cols-1 lg:AIBestPrompts__grid-cols-2 2xl:AIBestPrompts__grid-cols-4"):u&&(u.className="AIBestPrompts__gap-3.5 ABI_List_prompts _nonewtask AIBestPrompts__grid AIBestPrompts__grid-cols-1 lg:AIBestPrompts__grid-cols-1 2xl:AIBestPrompts__grid-cols-1"),I.querySelector("#topicSelect").addEventListener("change",this.changePromptTopic.bind(this)),I.querySelector("#sortBySelect").addEventListener("change",this.changePromptSortBy.bind(this)),I.querySelector("#promptSearchInput").addEventListener("input",this.debounce(this.changePromptSearch.bind(this),300).bind(this));let g=I.querySelectorAll("select.pageSizeSelect");document.removeEventListener("keydown",this.boundHandleArrowKey),g.length>0&&(g.forEach(t=>{t.addEventListener("change",this.changePromptPageSize.bind(this))}),document.addEventListener("keydown",this.boundHandleArrowKey))},boundHandleArrowKey:null,async handleArrowKey(t){let e="ArrowLeft"===t.key||"ArrowRight"===t.key,s="INPUT"===t.target.tagName||"TEXTAREA"===t.target.tagName;if(e&&!s){if("ArrowLeft"===t.key){await this.prevPromptTemplatesPage();return}await this.nextPromptTemplatesPage()}},async changePromptPageSize(t){let e=20;e=pageSizeOptions.includes(e)?e:20,localStorage.setItem(lastPageSizeKey,e),this.PromptTemplateSection.currentPage=0,this.PromptTemplateSection.pageSize=e,await this.insertPromptTemplatesSection()},async changePromptTopic(t){this.PromptTopic=t.target.value,this.PromptActivity="all",this.PromptTemplateSection.currentPage=0,await this.selectPromptTemplateByIndex(null),localStorage.setItem(lastPromptTopicKey,this.PromptTopic),this.fetchPromptTemplates(),this.fetchMessages()},async changePromptActivity(t){this.PromptActivity=t.target.value,this.PromptTemplateSection.currentPage=0,await this.insertPromptTemplatesSection()},changePromptSortBy(t){this.PromptSortMode=+t.target.value,this.PromptTemplateSection.currentPage=0,this.fetchPromptTemplates()},async changePromptSearch(t){this.PromptSearch=t.target.value,this.PromptTemplateSection.currentPage=0,await this.insertPromptTemplatesSection();let e=document.querySelector("#promptSearchInput");e.selectionStart=e.selectionEnd=e.value.length,e.focus()},async changePromptTemplatesType(t,e=null){(this.PromptTemplatesType!==t||this.PromptTemplatesList!==e)&&(this.PromptTemplatesType=t,this.PromptTemplatesList=e,this.PromptTemplateSection.currentPage=0,await this.insertPromptTemplatesSection())},debounce(t,e){let s;return r=>{clearTimeout(s),s=setTimeout(()=>t(r),e)}},insertLanguageToneWritingStyleContinueActions(){let t=document.createElement("div");t.id="language-select-wrapper",t.className=N("languageSelectWrapper");let e=this.Languages;if(!e){console.error("insertLanguageSelect: No languages found");return}let r=document.querySelector(`form textarea:not([name^="${variableIDPrefix}"])`);if(!r){console.error("insertLanguageSelect: No textarea found");return}let o=document.querySelector(".w-full.h-32.md\\:h-48.flex-shrink-0");o&&(o.style="display: none");let i=r.form.parentElement;i&&i.classList.remove("absolute","md:!bg-transparent","md:border-t-0","md:dark:border-transparent","md:border-transparent");let a=r.parentElement;if(!a){console.error("insertLanguageSelect: No parent element found");return}a.classList.add("AIBestPrompts__pr-4"),a.querySelector(`#${t.id}`)?t=a.querySelector(`#${t.id}`):a.prepend(t),t.innerHTML=`
    <div class="AIBestPrompts__flex AIBestPrompts__w-full">
      <div>
        <label for="languageSelect" class="${N("selectLabel")} AIBestPrompts__whitespace-nowrap">${s("Outputin")}</label>
        
        <select id="languageSelect" class="${N("select")}">
          <option value ${this.TargetLanguage?"":" selected"}>${s("Defaultlanguage")}</option>  

          ${this.Languages.map(t=>`
            <option value="${t.languageEnglish}" ${this.TargetLanguage===t.languageEnglish?" selected":""}>
              ${t.languageLabel}
              </option> 
          `).join("")}
        </select>
      </div>
      
      <div class="AIBestPrompts__ml-2">
        <label for="toneSelect" class="${N("selectLabel")}">${s("Tone")}</label>
      
        <select id="toneSelect" class="${N("select")}">
          <option value ${this.Tone?"":" selected"}>${s("Default")}</option>

          ${this.Tones.filter(t=>this.Client.UserQuota.canUseCustomTone(t)).map(t=>`
            <option value="${t.ID}" ${this.Tone===t.ID?" selected":""}>
              ${t.Label}
              </option> 
          `).join("")}

          ${this.Client.UserQuota.canUseCustomTone()?"":s("Upgradeformore")}
        </select>
      </div>

      <div class="AIBestPrompts__ml-2">
        <label for="writingStyleSelect" class="${N("selectLabel")} AIBestPrompts__whitespace-nowrap">${s("WritingStyle")}</label>
      
        <select id="writingStyleSelect" class="${N("select")}">
          <option value ${this.WritingStyle?"":" selected"}>${s("Default")}</option>

          ${this.WritingStyles.filter(t=>this.Client.UserQuota.canUseCustomWritingStyle(t)).map(t=>`
            <option value="${t.ID}" ${this.WritingStyle===t.ID?" selected":""}>
              ${t.Label}
              </option> 
          `).join("")}

          ${this.Client.UserQuota.canUseCustomWritingStyle()?"":s("Upgradeformore")}
        </select>
      </div>
    </div>

    <div class="AIBestPrompts__inline-flex AIBestPrompts__invisible" role="group" id="continueActionsGroup">
      <button id="continueWritingButton" title="${s("Continuewritingplease")}" class="${N("continueButton")}" onclick="event.stopPropagation(); AIBestPrompts.continueWriting()" type="button">${s("Continue")}</button>

      <select id="continueActionSelect" class="${N("continueActionSelect")}">
        <option value selected disabled>-- Select an action --</option>

        ${this.ContinueActions.map(t=>`
          <option value="${t.ID}" ${this.Client.UserQuota.canUsePowerContinue()?"":"disabled"}>${t.Label}</option>
        `).join("")}

        ${this.Client.UserQuota.canUsePowerContinue()?"":s("Upgradeformore")}
      </select>
    </div>
  `,t.querySelector("#languageSelect").addEventListener("change",this.changeTargetLanguage.bind(this)),t.querySelector("#toneSelect").addEventListener("change",this.changeTone.bind(this)),t.querySelector("#writingStyleSelect").addEventListener("change",this.changeWritingStyle.bind(this)),t.querySelector("#continueActionSelect").addEventListener("change",this.changeContinueAction.bind(this))},insertVariablesInputWrapper(){let t=document.querySelector("#"+variableWrapperID);if(t)t.innerHTML="",t.classList.add("AIBestPrompts__hidden");else{let e=document.querySelector("#language-select-wrapper");(t=document.createElement("div")).id=variableWrapperID,t.className="AIBestPrompts__gap-3 lg:AIBestPrompts__max-w-3xl md:last:AIBestPrompts__mb-6 AIBestPrompts__mx-2 AIBestPrompts__pt-2 AIBestPrompts__stretch AIBestPrompts__justify-between AIBestPrompts__text-sm AIBestPrompts__pb-2 AIBestPrompts__mb-2 AIBestPrompts__border-b AIBestPrompts__hidden",e.after(t)}},changeTargetLanguage(t){this.TargetLanguage=t.target.value,localStorage.setItem(lastTargetLanguageKey,this.TargetLanguage)},changeTone(t){this.Tone=parseInt(t.target.value)},changeWritingStyle(t){if("UPGRADE"===t.target.value){this.WritingStyle=null,this.Client.UserQuota.upgradeCustomTone();return}this.WritingStyle=parseInt(t.target.value)},changeContinueAction(t){if("UPGRADE"===t.target.value){this.Client.UserQuota.upgradePowerContinue();return}let e=parseInt(t.target.value),s=this.ContinueActions.find(t=>t.ID===e);s&&(this.Client.usePrompt(`${s.ID}`,S.SEND),this.submitContinueActionPrompt(s.Prompt))},continueWriting(){this.submitContinueActionPrompt(s("Continuewritingplease"))},submitContinueActionPrompt(t=""){let e=document.querySelector(`form textarea:not([name^="${variableIDPrefix}"])`);if(e.value.trim()&&e.value.trim()!==s("Continuewritingplease")&&!confirm(s("ContinuewritingpleaseConfirm")))return;e.value=t,e.focus(),e.dispatchEvent(new Event("input",{bubbles:!0}));let r=e.nextElementSibling;r.disabled&&(r.disabled=!1),r&&r.tagName&&"button"===r.tagName.toLowerCase()&&(console.log(r),r.click())},hideContinueActionsButton(){let t=document.querySelector("#continueActionsGroup");t&&t.classList.add("AIBestPrompts__invisible")},showContinueActionsButton(){let t=document.querySelector("#continueActionsGroup");t&&t.classList.remove("AIBestPrompts__invisible")},async prevPromptTemplatesPage(){this.PromptTemplateSection.currentPage--,this.PromptTemplateSection.currentPage=Math.max(0,this.PromptTemplateSection.currentPage),await this.insertPromptTemplatesSection()},async nextPromptTemplatesPage(){let t=await this.getCurrentPromptTemplates();t&&Array.isArray(t)&&0!==(t=await this.filterPromptTemplates(t)).length&&(this.PromptTemplateSection.currentPage++,this.PromptTemplateSection.currentPage=Math.min(Math.floor((t.length-1)/this.PromptTemplateSection.pageSize),this.PromptTemplateSection.currentPage),await this.insertPromptTemplatesSection())},exportCurrentChat(){let t=[...document.querySelector(".flex.flex-col.items-center").children,],e=t.map(t=>{let e=t.querySelector(".whitespace-pre-wrap");return e?0===e.children.length?"**User:**\n"+e.innerText:"**ChatGPT:**\n"+[...(e=e.firstChild).children].map(t=>"PRE"===t.nodeName?`\`\`\`${t.getElementsByTagName("code")[0].classList[2].split("-")[1]}
${t.innerText.replace(/^Copy code/g,"").trim()}
\`\`\``:`${t.innerHTML}`).join("\n"):""});if(!(e=e.filter(t=>t)))return!1;let s="";try{s=P+window.__NEXT_DATA__.props.pageProps.user.name+" on "+new Date().toLocaleString()+"\n```\n\n---"}catch{console.error("Failed to get user name from window.__NEXT_DATA__.props.pageProps.user.name. Using default header instead.")}let r=new Blob([s+"\n\n\n"+e.join("\n\n---\n\n")],{type:"text/plain"}),o=document.createElement("a");o.href=URL.createObjectURL(r),o.download=n+new Date().toISOString()+".md",document.body.appendChild(o),o.click()},updateForkedFromPromptLink(t){let e=document.getElementById("savePromptForm-forked-from");e.href="https://aibest.io/prompts/"+t,e.innerHTML="Forked from Prompt Template "+t,e.style="display: block;"},hidePublicPromptFormElements(t){t.elements.Public.type="hidden",t.elements.Public.disabled=!0,t.elements.Public.checked=!1,document.getElementById("savePromptForm-public-checkbox").style="display: none;",document.getElementById("savePromptForm-public-disclaimer").style="display: none;"},async editPromptTemplate(t){let e=(await this.getCurrentPromptTemplates())[t];if(this.PromptTemplatesType!==v.OWN&&!e.OwnPrompt&&!this.isAdminMode())return;await this.showSavePromptModal(new CustomEvent(editPromptTemplateEvent));let s=document.getElementById("savePromptForm");s.elements.Prompt.value=e.Prompt,s.elements.Teaser.value=e.Teaser,s.elements.PromptHint.value=e.PromptHint,s.elements.Title.value=e.Title,s.elements.Community.value=e.Community,s.elements.ID.value=e.ID,s.elements.AuthorName.value="",s.elements.AuthorURL.value="",s.elements.Views.value=e.Views,s.elements.Usages.value=e.Usages,s.elements.Votes.value=e.Votes,e.ForkedFromPromptID&&(s.elements.ForkedFromPromptID.value=e.ForkedFromPromptID,this.updateForkedFromPromptLink(e.ForkedFromPromptID),this.isAdminMode()||this.hidePublicPromptFormElements(s)),e.PromptTypeNo===$.PUBLIC&&(s.elements.Public.checked=!0),s.elements.Community.dispatchEvent(new Event("change")),s.elements.Category.value=e.Category},async deletePromptTemplate(t){let e=(await this.getCurrentPromptTemplates())[t];if((this.PromptTemplatesType===v.OWN||e.OwnPrompt||this.isAdminMode())&&confirm(`${s("DeletePromptConfirm")} "${e.Title}"?`)){try{await this.Client.deletePrompt(e.ID),this.OwnPrompts=this.OwnPrompts.filter(t=>t.ID!==e.ID),e.PromptTypeNo===$.PUBLIC&&(this.PromptTemplates=this.PromptTemplates.filter(t=>t.ID!==e.ID))}catch(r){this.showNotification(f.ERROR,s("Somethingwhenrong"));return}await this.insertPromptTemplatesSection()}},async voteThumbsUp(t){try{await this.Client.voteForPrompt(this.PromptTemplates[t].ID,1)}catch(e){this.showNotification(f.ERROR,s("Somethingwhenrong"));return}this.showNotification(f.SUCCESS,s("ThanksVote"))},async voteThumbsDown(t){try{await this.Client.voteForPrompt(this.PromptTemplates[t].ID,-1)}catch(e){this.showNotification(f.ERROR,s("Somethingwhenrong"));return}this.showNotification(f.SUCCESS,s("ThanksVote"))},async reportPrompt(t){t.preventDefault();let e=new FormData(t.target);try{await this.Client.reportPrompt(e.get("PromptID"),+e.get("FeedbackTypeNo"),e.get("FeedbackText"),e.get("FeedbackContact"))}catch(r){this.showNotification(f.ERROR,s("Somethingwhenrong"));return}this.showNotification(f.SUCCESS,s("ThanksFeedback")),this.hideModal("reportPromptModal")},async copyPromptDeepLink(t){let e=(await this.getCurrentPromptTemplates())[t];if(!e)return;let r=e.PromptTypeNo===$.PUBLIC?`https://aibest.io/prompts/${e.slug}`:`https://chat.openai.com/?${queryParamPromptID}=${e.ID}`;navigator.clipboard.writeText(r).then(()=>{if(e.PromptTypeNo!==$.PUBLIC){this.showNotification(f.WARNING,s("WarningNotpublic"));return}this.showNotification(f.SUCCESS,s("CopylinkNotify"))},()=>{this.showNotification(f.ERROR,s("Somethingwhenrong"))})},async selectPromptTemplateByIndex(t){let e=await this.getCurrentPromptTemplates();e&&Array.isArray(e)&&(this.selectPromptTemplate(e[t]),this.hideContinueActionsButton())},extractVariableDefinitions(t){if(!t.PromptVariables){for(var e,s=[];e=A.exec(t.Prompt);){let r=e[1];var o=!0;if(s.forEach(t=>{t.ID===r&&(o=!1)}),o){let i="";e.length>=4&&e[3]&&(i=e[3].substring(1));let a=[];if(e.length>=5&&e[4]){let p=e[4].substring(1);p.length>0&&(a=p.split("|"))}s.push({ID:r,Label:e[2],DefaultValue:i,EnumS:a})}}s.length>0&&(s.sort((t,e)=>t.ID-e.ID),t.PromptVariables=s)}},promptVariableEnumValueSelected(t){if("UPGRADE"===t.value){t.selectedIndex=0,this.Client.UserQuota.upgradePromptVariableEnumMaxSize();return}},selectPromptTemplate(t){let e=document.querySelector(`textarea:not([name^="${variableIDPrefix}"])`),s=e.parentElement,r=document.createElement("div");r.id="prompt-wrapper",s.querySelector("#prompt-wrapper")?r=s.querySelector("#prompt-wrapper"):s.prepend(r);let o=new URL(window.location.href);this.insertVariablesInputWrapper();let i=document.querySelector("#"+variableWrapperID);if(t){r.innerHTML=`
        <span class="${N`tag`}" title="${V(t.Teaser)}">
          ${V(t.Title)}
        </span>
        `,this.extractVariableDefinitions(t),t.PromptVariables&&t.PromptVariables.length>0&&(i.classList.remove("AIBestPrompts__hidden"),1==t.PromptVariables.length?i.classList.remove("AIBestPrompts__grid","AIBestPrompts__grid-cols-1","lg:AIBestPrompts__grid-cols-2"):i.classList.add("AIBestPrompts__grid","AIBestPrompts__grid-cols-1","lg:AIBestPrompts__grid-cols-2"),t.PromptVariables.forEach(t=>{let e=document.createElement("div"),s=`
              <label class="AIBestPrompts__block AIBestPrompts__text-sm AIBestPrompts__font-medium AIBestPrompts__truncate" title="${V(t.Label)}">${V(t.Label)}</label>
            `;t.EnumS.length>0?s+=`
                <select id="${variableIDPrefix}${t.ID}" 
                  name="${variableIDPrefix}${t.ID}"
                  title="${V(t.Label)}"
                  onchange="AIBestPrompts.promptVariableEnumValueSelected(this)"
                  class="AIBestPrompts__w-full AIBestPrompts__border-0 AIBestPrompts__rounded AIBestPrompts__p-2 AIBestPrompts__mt-1 AIBestPrompts__bg-gray-100 dark:AIBestPrompts__bg-gray-600 dark:AIBestPrompts__border-gray-600 dark:hover:AIBestPrompts__bg-gray-900 dark:AIBestPrompts__placeholder-gray-400 dark:AIBestPrompts__text-white hover:AIBestPrompts__bg-gray-200" required>
                    ${t.EnumS.slice(0,this.Client.UserQuota.promptVariableEnumMaxSize()).map(e=>`
                        <option value="${V(e)}" ${t.DefaultValue===e?"selected":""}>${V(e)}</option>`).join("")}
  
                    ${t.EnumS.length>this.Client.UserQuota.promptVariableEnumMaxSize()?'<option value disabled>_________</option><option value="UPGRADE">Upgrade for all prompt variable values</option>':""}
                }
                </select>
             `:s+=`
                <textarea id="${variableIDPrefix}${t.ID}" 
                name="${variableIDPrefix}${t.ID}"
                rows="1"
                title="${V(t.Label)}"
                placeholder="${V(t.Label)}"
                class="AIBestPrompts__w-full AIBestPrompts__border-0 AIBestPrompts__rounded AIBestPrompts__p-2 AIBestPrompts__mt-1 AIBestPrompts__bg-gray-100 dark:AIBestPrompts__bg-gray-600 dark:AIBestPrompts__border-gray-600 dark:hover:AIBestPrompts__bg-gray-900 dark:AIBestPrompts__placeholder-gray-400 dark:AIBestPrompts__text-white hover:AIBestPrompts__bg-gray-200">${V(t.DefaultValue)}</textarea>
              `,e.innerHTML=s,i.append(e)})),e.placeholder=t.PromptHint,this.SelectedPromptTemplate=t,e.focus(),this.Client.usePrompt(t.ID,S.CLICK);let a=localStorage.getItem("AIBestPrompts_PromptID");if(a===t.ID)return;o.searchParams.set(queryParamPromptID,t.ID)}else{r.innerHTML="",e.placeholder="",this.SelectedPromptTemplate=null;let p=[];for(let m of o.searchParams.keys())(m.startsWith(queryParamVariable)||m===queryParamPromptID)&&p.push(m);if(!p.length)return;p.forEach(t=>o.searchParams.delete(t))}window.history.pushState({},"",o)},CSVToArray(t,e){for(var s,r=RegExp("(\\"+(e=e||",")+'|\\r?\\n|\\r|^)(?:"([^"]*(?:""[^"]*)*)"|([^"\\'+e+"\\r\\n]*))","gi"),o=[[]];s=r.exec(t);){var i=s[1];i.length&&i!==e&&o.push([]);var a=s[2]?s[2].replace(RegExp('""',"g"),'"'):s[3];o[o.length-1].push(a)}return o},getTopicLabel(t){let e=this.Topics.find(e=>e.ID===t);return e?e.Label:""},getActivityLabel(t){let e=this.Activities.find(e=>e.ID===t);return e?e.Label:""},isAdmin(){return this.Client.User.UserLevelNo===x.SUPER_ADMIN},isAdminMode(){return this.isAdmin()&&this.AdminMode},async toggleAdminMode(){this.isAdmin()&&(this.AdminMode=!this.AdminMode,await this.insertPromptTemplatesSection())},canCreatePromptTemplate(){return this.canCreatePublicPromptTemplate()||this.canCreatePrivatePromptTemplate()},canCreatePrivatePromptTemplate(){return this.isAdmin()||this.Client.UserQuota.canCreatePrivatePromptTemplate(this.OwnPrompts)},canCreatePublicPromptTemplate(){return this.isAdmin()||this.Client.UserQuota.canCreatePublicPromptTemplate(this.OwnPrompts)},async showViewPromptModal(t){let e=document.getElementById("viewPromptModal");e||((e=document.createElement("div")).id="viewPromptModal",document.body.appendChild(e)),e.innerHTML=`
      <div class="AIBestPrompts__fixed AIBestPrompts__inset-0 AIBestPrompts__text-center AIBestPrompts__transition-opacity AIBestPrompts__z-50">
        <div class="AIBestPrompts__absolute AIBestPrompts__bg-gray-900 AIBestPrompts__inset-0 AIBestPrompts__opacity-90">
        </div>

        <div class="AIBestPrompts__fixed AIBestPrompts__inset-0 AIBestPrompts__overflow-y-auto">
          <div class="AIBestPrompts__flex AIBestPrompts__items-center AIBestPrompts__justify-center AIBestPrompts__min-h-full">
            <form id="viewPromptForm">
              <div
              class="AIBestPrompts__align-center AIBestPrompts__bg-white dark:AIBestPrompts__bg-gray-800 dark:AIBestPrompts__text-gray-200 AIBestPrompts__inline-block AIBestPrompts__overflow-hidden sm:AIBestPrompts__rounded-lg AIBestPrompts__shadow-xl sm:AIBestPrompts__align-middle sm:AIBestPrompts__max-w-lg sm:AIBestPrompts__my-8 sm:AIBestPrompts__w-full AIBestPrompts__text-left AIBestPrompts__transform AIBestPrompts__transition-all"
              role="dialog" aria-modal="true" aria-labelledby="modal-headline">
          
                <div class="AIBestPrompts__bg-white dark:AIBestPrompts__bg-gray-800 AIBestPrompts__px-4 AIBestPrompts__pt-5 AIBestPrompts__pb-4 sm:AIBestPrompts__p-6 sm:AIBestPrompts__pb-4 AIBestPrompts__overflow-y-auto">
                  <label>${s("PromptTemplatelabel")}</label>
                  <textarea disabled name="Prompt" class="AIBestPrompts__w-full AIBestPrompts__bg-gray-100 dark:AIBestPrompts__bg-gray-700 dark:AIBestPrompts__border-gray-700 AIBestPrompts__rounded AIBestPrompts__p-2 AIBestPrompts__mt-2 AIBestPrompts__mb-3" style="height: 120px;" required
                            placeholder="${s("Prompttextincludingplaceholders")}"
                            title="${s("Prompttextincludingplaceholders")}"></textarea>
            
                  <label>${s("Teaser")}</label>
                  <textarea disabled name="Teaser" required
                    title="${s("Shortteasertemplate")}'"
                    class="AIBestPrompts__w-full AIBestPrompts__bg-gray-100 dark:AIBestPrompts__bg-gray-700 dark:AIBestPrompts__border-gray-700 AIBestPrompts__rounded AIBestPrompts__p-2 AIBestPrompts__mt-2 AIBestPrompts__mb-3" style="height: 71px;"
                    placeholder="${s("Createakeyword")}"></textarea>
                    
                  <label>${s("PromptHintlable")}</label>
                  <input disabled name="PromptHint" required type="text"
                    title="${s("Prompthint")}"
                    class="AIBestPrompts__w-full AIBestPrompts__bg-gray-100 dark:AIBestPrompts__bg-gray-700 dark:AIBestPrompts__border-gray-700 AIBestPrompts__rounded AIBestPrompts__p-2 AIBestPrompts__mt-2 AIBestPrompts__mb-3" placeholder="${s("Prompthintholder")}" />

                  <label>${s("Title")}</label>
                  <input disabled name="Title" type="text" 
                    title="${s("Prompttitledecs")}" class="AIBestPrompts__w-full AIBestPrompts__bg-gray-100 dark:AIBestPrompts__bg-gray-700 dark:AIBestPrompts__border-gray-700 AIBestPrompts__rounded AIBestPrompts__mb-3 AIBestPrompts__mt-2 AIBestPrompts__p-2 AIBestPrompts__w-full" />
            
                  <div class="AIBestPrompts__flex">
                    <div class="AIBestPrompts__mr-4 AIBestPrompts__w-full">
                      <label>${s("Topic")}</label>
                      <select disabled name="Community" class="AIBestPrompts__mt-2 AIBestPrompts__mb-3 dark:AIBestPrompts__bg-gray-700 dark:AIBestPrompts__border-gray-700 dark:hover:AIBestPrompts__bg-gray-900 AIBestPrompts__rounded AIBestPrompts__w-full" required>
                        ${this.Topics.map(t=>`
                              <option value="${V(t.ID)}" ${t.ID===this.PromptTopic?"selected":""}>${V(t.Label)}</option>`).join("")}
                      </select>
                    </div>

                    <div class="AIBestPrompts__w-full">
                      <label>${s("Activity")}</label>
                      <select disabled name="Category" class="AIBestPrompts__mt-2 AIBestPrompts__mb-3 dark:AIBestPrompts__bg-gray-700 dark:AIBestPrompts__border-gray-700 dark:hover:AIBestPrompts__bg-gray-900 AIBestPrompts__rounded AIBestPrompts__w-full" required>
                        ${this.getActivities("all"===this.PromptTopic?this.Topics[0].ID:this.PromptTopic).map(t=>`
                              <option value="${V(t.ID)}">${V(t.Label)}</option>`).join("")}
                      </select>
                    </div>
                  </div>
                  <!--
                  <div class="AIBestPrompts__block AIBestPrompts__mt-4">
                    <div class="AIBestPrompts__flex AIBestPrompts__justify-between AIBestPrompts__mt-4">
                      <div class="AIBestPrompts__mr-4 AIBestPrompts__w-full"><label>${s("AuthorName")}</label>
                        <input disabled name="AuthorName" type="text" title="${s("AuthorNamevisibleforallusers")}"
                              placeholder="${s("AuthorName")}" class="AIBestPrompts__bg-gray-100 dark:AIBestPrompts__bg-gray-700 dark:AIBestPrompts__border-gray-700 AIBestPrompts__rounded AIBestPrompts__mb-3 AIBestPrompts__mt-2 AIBestPrompts__p-2 AIBestPrompts__w-full" />
                      </div>

                      <div class="AIBestPrompts__w-full"><label>${s("AuthorURL")}</label>
                        <input disabled name="AuthorURL" type="url" title="${s("AuthorURLvisibleforallusers")}"
                              placeholder="https://www.example.com/" class="AIBestPrompts__bg-gray-100 dark:AIBestPrompts__bg-gray-700 dark:AIBestPrompts__border-gray-700 AIBestPrompts__rounded AIBestPrompts__mb-3 AIBestPrompts__mt-2 AIBestPrompts__p-2 AIBestPrompts__w-full" />
                      </div>
                    </div>                
                  </div>
                  -->
                </div>
            
                <div class="AIBestPrompts__bg-gray-200 dark:AIBestPrompts__bg-gray-700 AIBestPrompts__px-4 AIBestPrompts__py-3 AIBestPrompts__text-right">
                  <button type="button" class="AIBestPrompts__bg-gray-600 hover:AIBestPrompts__bg-gray-800 AIBestPrompts__mr-2 AIBestPrompts__px-4 AIBestPrompts__py-2 AIBestPrompts__rounded AIBestPrompts__text-white"
                          onclick="AIBestPrompts.hideViewPromptModal()"> ${s("Close")}
                  </button>
                  <button type="button" class="AIBestPrompts__bg-green-600 hover:AIBestPrompts__bg-green-700 AIBestPrompts__mr-2 AIBestPrompts__px-4 AIBestPrompts__py-2 AIBestPrompts__rounded AIBestPrompts__text-white"  
                          onclick="AIBestPrompts.hideViewPromptModal(); AIBestPrompts.forkToPrivatePrompt(${t})">
                          ${s("ForkasPrivatePrompt")}
                  </button>
                </div>
            
              </div>
            </form>
          </div>
        </div>
        
      </div>
    `,e.style="display: block;",document.addEventListener("keydown",t=>{"Escape"===t.key&&this.hideViewPromptModal()})},hideViewPromptModal(){this.hideModal("viewPromptModal")},async viewPromptTemplateSource(t){if(!this.Client.UserQuota.canUseViewPromptTemplateSource())return;let e=(await this.getCurrentPromptTemplates())[t];this.showViewPromptModal(t);let s=document.getElementById("viewPromptForm");s.elements.Prompt.value=e.Prompt,s.elements.Teaser.value=e.Teaser,s.elements.PromptHint.value=e.PromptHint,s.elements.Title.value=e.Title,s.elements.Community.value=e.Community,s.elements.Category.value=e.Category,s.elements.AuthorName.value="",s.elements.AuthorURL.value=""},async forkToPrivatePrompt(t){let e=(await this.getCurrentPromptTemplates())[t];await this.showSavePromptModal();let s=document.getElementById("savePromptForm");s.elements.ForkedFromPromptID.value=e.ID,s.elements.Prompt.value=e.Prompt,s.elements.Teaser.value=e.Teaser,s.elements.PromptHint.value=e.PromptHint,s.elements.Title.value=e.Title,s.elements.Community.value=e.Community,this.updateForkedFromPromptLink(e.ID),this.isAdminMode()&&e.PromptTypeNo===$.PUBLIC?s.elements.Public.checked=!0:this.isAdminMode()||this.hidePublicPromptFormElements(s),s.elements.Community.dispatchEvent(new Event("change")),s.elements.Category.value=e.Category},async addToHiddenList(t){if(!this.Client.UserQuota.canUseHidden(this.Lists))return;let r=(await this.getCurrentPromptTemplates())[t],o=this.Lists.getHidden();try{o?await o.add(r):await this.Lists.create(this.Client,y.HIDDEN,"",{PromptID:r.ID,Comment:""})}catch(i){this.showNotification(f.ERROR,`Could not hide prompt template. ${i instanceof e?i.message:""}`),i instanceof e&&i.ReactionNo===E.RXN_AIBestPrompts_QUOTA_EXCEEDED&&(o?this.Client.UserQuota.listItemQuotaExceeded():this.Client.UserQuota.listQuotaExceeded());return}this.showNotification(f.SUCCESS,s("AddtoHidden")),await this.insertPromptTemplatesSection()},async removeFromHiddenList(t){let r=(await this.getCurrentPromptTemplates())[t],o=this.Lists.getHidden();try{await o.remove(r)}catch(i){this.showNotification(f.ERROR,`${s("notunhide")} ${i instanceof e?i.message:""}`);return}this.showNotification(f.SUCCESS,s("RemovedfromHidden")),await this.insertPromptTemplatesSection()},async isHidden(t){let e=this.Lists.getHidden();if(!e)return!1;let s=(await this.getCurrentPromptTemplates())[t];return await e.has(s)},async addToFavoritesList(t){if(!this.Client.UserQuota.canUseFavorites(this.Lists))return;let r=(await this.getCurrentPromptTemplates())[t],o=this.Lists.getFavorites();try{o?await o.add(r):await this.Lists.create(this.Client,y.FAVORITES,"",{PromptID:r.ID,Comment:""})}catch(i){this.showNotification(f.ERROR,`${s("notFavorites")} ${i instanceof e?i.message:""}`),i instanceof e&&i.ReactionNo===E.RXN_AIBestPrompts_QUOTA_EXCEEDED&&(o?this.Client.UserQuota.listItemQuotaExceeded():this.Client.UserQuota.listQuotaExceeded());return}this.showNotification(f.SUCCESS,s("addtoFavorites")),this.insertPromptTemplatesSection()},async removeFromFavoritesList(t){let r=(await this.getCurrentPromptTemplates())[t],o=this.Lists.getFavorites();try{await o.remove(r)}catch(i){this.showNotification(f.ERROR,`${s("notRemoveFavorites")} ${i instanceof e?i.message:""}`);return}this.showNotification(f.SUCCESS,s("RemovedFavorite")),this.insertPromptTemplatesSection()},async isFavorite(t){let e=this.Lists.getFavorites();if(!e)return!1;let s=(await this.getCurrentPromptTemplates())[t];return await e.has(s)},async addToList(t){if(!this.Client.UserQuota.canUseCustomList())return;let e=(await this.getCurrentPromptTemplates())[t],s=this.Lists.getCustom(),r=this.Lists.getAIBestPromptsVerified();r&&r.OwnList&&s.push(r),s.sort((t,e)=>t.Comment.localeCompare(e.Comment)),this.showListSelectionModal(s,e)},async removeFromList(t,r){let o=(await this.getCurrentPromptTemplates())[r],i=this.Lists.withID(t);try{await i.remove(o)}catch(a){this.showNotification(f.ERROR,`${s("notremovelist")} ${a instanceof e?a.message:""}`);return}this.showNotification(f.SUCCESS,`${s("Removedfrom")} "${V(i.Comment)}" ${s("promptslist")}.`),this.insertPromptTemplatesSection()},showListSelectionModal(t,e){let r=document.getElementById("listSelectionModal");r||((r=document.createElement("div")).id="listSelectionModal",r.addEventListener("submit",this.handleListSelectionModalSubmit.bind(this)),document.body.appendChild(r)),r.innerHTML=`
      <div class="AIBestPrompts__fixed AIBestPrompts__inset-0 AIBestPrompts__text-center AIBestPrompts__transition-opacity AIBestPrompts__z-50">
        <div class="AIBestPrompts__absolute AIBestPrompts__bg-gray-900 AIBestPrompts__inset-0 AIBestPrompts__opacity-90">
        </div>

        <div class="AIBestPrompts__fixed AIBestPrompts__inset-0 AIBestPrompts__overflow-y-auto">
          <div class="AIBestPrompts__flex AIBestPrompts__items-center AIBestPrompts__justify-center AIBestPrompts__min-h-full">
            <form>
              <div
                class="AIBestPrompts__align-center AIBestPrompts__bg-white dark:AIBestPrompts__bg-gray-800 dark:AIBestPrompts__text-gray-200 AIBestPrompts__inline-block AIBestPrompts__overflow-hidden sm:AIBestPrompts__rounded-lg AIBestPrompts__shadow-xl sm:AIBestPrompts__align-middle sm:AIBestPrompts__max-w-lg sm:AIBestPrompts__my-8 sm:AIBestPrompts__w-full AIBestPrompts__text-left AIBestPrompts__transform AIBestPrompts__transition-all"
                role="dialog" aria-modal="true" aria-labelledby="modal-headline">

                <div class="AIBestPrompts__bg-white dark:AIBestPrompts__bg-gray-800 AIBestPrompts__px-4 AIBestPrompts__pt-5 AIBestPrompts__pb-4 sm:AIBestPrompts__p-6 sm:AIBestPrompts__pb-4 AIBestPrompts__w-96">

                  <input type="hidden" name="promptID" value="${V(e.ID)}">          

                  <h3 class="${N`h3`} AIBestPrompts__my-4">Choose a list</h3>

                  <label class="AIBestPrompts__block">Lists</label>
                  <select name="listID" class="AIBestPrompts__mt-2 AIBestPrompts__mb-3 dark:AIBestPrompts__bg-gray-700 dark:AIBestPrompts__border-gray-700 dark:hover:AIBestPrompts__bg-gray-900 AIBestPrompts__rounded AIBestPrompts__w-full">
                    ${t.map(t=>`<option value="${V(t.ID)}">${V(t.Comment)}</option>`).join("")}

                      <option disabled>_________</option>

                      ${t.length?s("createnewlist2"):s("nolistfound1")}
                  </select>
                  
                  <div id="createNewList" class="${t.length?"AIBestPrompts__hidden":""}">
                    <h3 class="${N`h3`} AIBestPrompts__my-4 AIBestPrompts__mt-6">${s("createnewlist")}</h3>
                    
                    <label class="AIBestPrompts__block">List Name</label>
                    <input type="text" name="listName" class="AIBestPrompts__mt-2 AIBestPrompts__mb-3 dark:AIBestPrompts__bg-gray-700 dark:AIBestPrompts__border-gray-700 dark:hover:AIBestPrompts__bg-gray-900 AIBestPrompts__rounded AIBestPrompts__w-full" ${t.length?"":"required"}>
                  </div>

                </div>

                <div class="AIBestPrompts__bg-gray-200 dark:AIBestPrompts__bg-gray-700 AIBestPrompts__px-4 AIBestPrompts__py-3 AIBestPrompts__text-right">
                  <button type="button" class="AIBestPrompts__bg-gray-600 hover:AIBestPrompts__bg-gray-800 AIBestPrompts__mr-2 AIBestPrompts__px-4 AIBestPrompts__py-2 AIBestPrompts__rounded AIBestPrompts__text-white"
                          onclick="AIBestPrompts.hideModal('listSelectionModal')"> ${s("Cancel")}
                  </button>
                  <button type="submit" class="AIBestPrompts__bg-green-600 hover:AIBestPrompts__bg-green-700 AIBestPrompts__mr-2 AIBestPrompts__px-4 AIBestPrompts__py-2 AIBestPrompts__rounded AIBestPrompts__text-white">${s("Addtolist")}</button>
                </div>
              </div>
            </form>
          </div>
        </div>

      </div>
    `;let o=r.querySelector('select[name="listID"]');o.addEventListener("change",t=>{let e=r.querySelector("#createNewList");if(""===t.target.value){e.classList.remove("AIBestPrompts__hidden");return}e.classList.add("AIBestPrompts__hidden")}),r.style="display: block;",document.addEventListener("keydown",t=>{"Escape"===t.key&&F("listSelectionModal")})},async handleListSelectionModalSubmit(t){t.preventDefault();let r=new FormData(t.target),o=r.get("listID"),i=r.get("listName")?.trim();if(!o&&!i){this.showNotification(f.ERROR,s("Pleaseselectlist"));return}let a=r.get("promptID"),p;try{if(o){if(p=this.Lists.withID(o),!this.Client.UserQuota.canAddToCustomList(p))return;await p.add({ID:a})}else{if(!this.Client.UserQuota.canCreateCustomList(this.Lists))return;p=await this.Lists.create(this.Client,y.CUSTOM,i,{PromptID:a,Comment:""})}}catch(m){this.showNotification(f.ERROR,`${s("notaddedtolist")} ${m instanceof e?m.message:""}`),m instanceof e&&m.ReactionNo===E.RXN_AIBestPrompts_QUOTA_EXCEEDED&&(o?this.Client.UserQuota.listItemQuotaExceeded():this.Client.UserQuota.listQuotaExceeded());return}this.showNotification(f.SUCCESS,`${s("Addedto")} "${V(p.Comment)}" ${s("promptslist")}.`),this.hideModal("listSelectionModal"),o||this.insertPromptTemplatesSection()},async editCustomList(t){let r=this.Lists.withID(t),o=prompt(s("enternamelist"),V(r.Comment));if(o){try{await r.update(o)}catch(i){this.showNotification(f.ERROR,`${s("notupdatelist")} ${i instanceof e?i.message:""}`);return}this.showNotification(f.SUCCESS,s("Updatedlist")),this.insertPromptTemplatesSection()}},async deleteCustomList(t){let r=this.Lists.withID(t);if(confirm(`${s("Confirmdeletelist")} "${V(r.Comment)}"?`)){try{await this.Lists.delete(r)}catch(o){this.showNotification(f.ERROR,`${s("notdeletedlist")} ${o instanceof e?o.message:""}`);return}this.showNotification(f.SUCCESS,`${s("Deletedlist")} "${V(r.Comment)}".`),this.PromptTemplatesList=null,this.PromptTemplatesType=v.PUBLIC,this.insertPromptTemplatesSection()}},howToUseFavoriteList(){this.showNotification(f.INFO,s("ToaddFavorites"))},howToUseHiddenList(){this.showNotification(f.INFO,s("ToaddHidden"))},async isVerified(t){let e=this.Lists.getAIBestPromptsVerified();if(!e)return!1;if(!this.Client.UserQuota.canUseAIBestPromptsVerifiedList(!1))return!0;let s=(await this.getCurrentPromptTemplates())[t];return await e.has(s)}},window.AIBestPrompts.init();